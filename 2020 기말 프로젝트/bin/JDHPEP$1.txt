import JDHPEP.1.1;
import JDHPEP.1.2;
import JDHPEP.1.3;
import JDHPEP.1.4;
import JDHPEP.1.5;
import java.awt.Checkbox;
import java.awt.Color;
import java.awt.Component;
import java.awt.FileDialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.border.Border;

class JDHPEP$1 implements ActionListener {
	JDHPEP$1(JDHPEP var1, JButton var2, JPasswordField var3, JTextField var4, JLabel var5, JLabel var6, JButton var7,
			Checkbox var8) {
		this.this$0 = var1;
		this.val$btn1 = var2;
		this.val$PW = var3;
		this.val$ID = var4;
		this.val$IdLabel = var5;
		this.val$psJLabel = var6;
		this.val$longBtn = var7;
		this.val$cb1 = var8;
	}

	public void actionPerformed(ActionEvent e) {
      JOptionPane.showMessageDialog((Component)null, "화면이 뜨지 않는 다면 재 접속 해주시길 바랍니다. 가급적 엔터키를 눌러주세요", "서버 불안정", 2);
      this.this$0.setVisible(false);
      this.this$0.imgLabel.setVisible(false);
      this.val$btn1.setVisible(false);
      this.val$PW.setVisible(false);
      this.val$ID.setVisible(false);
      this.val$IdLabel.setVisible(false);
      this.val$psJLabel.setVisible(false);
      this.val$longBtn.setVisible(false);
      this.val$cb1.setVisible(false);
      JFrame frame = new JFrame("메모");
      frame.setVisible(true);
      frame.setSize(850, 700);
      this.this$0.setDefaultCloseOperation(3);
      JPanel textPanel = new JPanel();
      JPanel alarmPanel = new JPanel();
      frame.getContentPane().add(textPanel, "North");
      frame.getContentPane().add(alarmPanel, "South");
      this.this$0.bb.setLineWrap(true);
      this.this$0.bb.setWrapStyleWord(true);
      this.this$0.bb.setToolTipText("텍스트를 입력하세요");
      Border lineBorder = BorderFactory.createLineBorder(Color.black, 1);
      Border emptyBorder = BorderFactory.createEmptyBorder(7, 7, 7, 7);
      this.this$0.bb.setBorder(BorderFactory.createCompoundBorder(lineBorder, emptyBorder));
      textPanel.add(new JScrollPane(this.this$0.bb));
      JMenuBar menuBar = new JMenuBar();
      JMenu fileMenu = new JMenu("파일");
      JMenuItem newItem = new JMenuItem("새 창");
      JMenuItem openItem = new JMenuItem("열기");
      JMenuItem saveItem = new JMenuItem("저장");
      JMenuItem saveasItem = new JMenuItem("다른 이름으로 저장");
      JMenuItem closeItem = new JMenuItem("끝내기");
      frame.setJMenuBar(menuBar);
      menuBar.add(fileMenu);
      fileMenu.add(newItem);
      fileMenu.add(openItem);
      fileMenu.add(saveItem);
      fileMenu.add(saveasItem);
      fileMenu.add(closeItem);
      FileDialog mSave = new FileDialog(frame, "저장", 1);
      FileDialog mOpen = new FileDialog(frame, "열기", 0);
      newItem.addActionListener(new 1(this, frame));
      openItem.addActionListener(new 2(this, mOpen, frame));
      saveItem.addActionListener(new 3(this, mSave, frame));
      saveasItem.addActionListener(new 4(this, mSave, frame));
      closeItem.addActionListener(new 5(this));
   }
}