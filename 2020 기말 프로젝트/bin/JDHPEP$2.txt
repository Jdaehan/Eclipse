import JDHPEP.2.1;
import JDHPEP.2.MenuActionListener;
import java.awt.Checkbox;
import java.awt.Component;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

class JDHPEP$2 implements ActionListener {
	JDHPEP$2(JDHPEP var1, JTextField var2, JPasswordField var3, JButton var4, JLabel var5, JLabel var6, JButton var7,
			Checkbox var8) {
		this.this$0 = var1;
		this.val$ID = var2;
		this.val$PW = var3;
		this.val$btn1 = var4;
		this.val$IdLabel = var5;
		this.val$psJLabel = var6;
		this.val$longBtn = var7;
		this.val$cb1 = var8;
	}

	public void actionPerformed(ActionEvent e) {
      String id = "20191450";
      String pw = "jangdaehan";
      if (id.equals(this.val$ID.getText()) && pw.equals(this.val$PW.getText())) {
         this.val$btn1.setVisible(false);
         this.val$PW.setVisible(false);
         this.val$ID.setVisible(false);
         this.val$IdLabel.setVisible(false);
         this.val$psJLabel.setVisible(false);
         this.val$longBtn.setVisible(false);
         this.val$cb1.setVisible(false);
         this.this$0.imgLabel.setVisible(false);
         new JLabel();
         this.this$0.setTitle("★JDHPEP 프로그램★");
         this.this$0.setSize(800, 550);
         this.this$0.setVisible(true);
         this.this$0.setDefaultCloseOperation(3);
         JOptionPane.showMessageDialog((Component)null, "이미지 관련 저장, 가져오기 기능에는 한계가 있어서 편집 기능이라도 이용해주세요!", "참고해주세요!", 1);
         Container pc = this.this$0.getContentPane();
         pc.setLayout(new FlowLayout());
         JComboBox<String> combo = new JComboBox(this.this$0.animal);
         pc.add(combo);
         pc.add(this.this$0.imgLabel2);
         Container c = this.this$0.getContentPane();
         c.setLayout(new FlowLayout());
         ImageIcon normalIcon = new ImageIcon("C:\\Users\\HOME\\eclipse-workspace\\전자정보통신공학과 20191450 장대한 기말\\image/dju1.jpg");
         ImageIcon rolloverIcon = new ImageIcon("C:\\Users\\HOME\\eclipse-workspace\\전자정보통신공학과 20191450 장대한 기말\\image/dju2.jpg");
         ImageIcon pressedIcon = new ImageIcon("C:\\Users\\HOME\\eclipse-workspace\\전자정보통신공학과 20191450 장대한 기말\\image/dju3.jpg");
         JButton dju = new JButton("재학중인 학교", normalIcon);
         dju.setPressedIcon(pressedIcon);
         dju.setRolloverIcon(rolloverIcon);
         c.add(dju);
         this.this$0.setSize(150, 100);
         this.this$0.setVisible(true);
         this.createMenu();
         this.this$0.getContentPane().add(this.this$0.imgLabel2, "Center");
         this.this$0.setSize(800, 550);
         this.this$0.setVisible(true);
         this.this$0.setLocationRelativeTo((Component)null);
         this.this$0.setResizable(false);
         this.this$0.setDefaultCloseOperation(3);
         combo.addActionListener(new 1(this));
      } else {
         JOptionPane.showMessageDialog((Component)null, "아이디와 비밀번호를 다시 입력해주세요.", "로그인 오류", 2);
         int result = JOptionPane.showConfirmDialog((Component)null, "재로그인 하시겠습니까", "프로그램 종료 재확인", 0);
         if (result != -1 && result != 0) {
            JOptionPane.showMessageDialog((Component)null, "모든 프로그램이 종료됩니다.", "프로그램 종료", 0);
            System.exit(0);
         }
      }

   }

	private void createMenu() {
		JMenuBar mb = new JMenuBar();
		JMenuItem[] menuItem = new JMenuItem[7];
		String[] itemTitle = new String[]{"밝기 +50", "밝기 -50", "채도 0%", "채도 100%", "선명하게", "모자이크", "스케치", "흐리게", "흑백처리"};
		JMenu colorMenu = new JMenu("색감");
		JMenu fileMenu = new JMenu("파일");
		mb.add(fileMenu);
		JMenuItem[] menuItem1 = new JMenuItem[4];
		MenuActionListener listener1 = new MenuActionListener(this);
		fileMenu.add(new JMenuItem("원래대로")).addActionListener(listener1);
		fileMenu.addSeparator();
		fileMenu.add(new JMenuItem("숨기기")).addActionListener(listener1);
		fileMenu.addSeparator();
		fileMenu.add(new JMenuItem("다시보이기")).addActionListener(listener1);
		fileMenu.addSeparator();
		fileMenu.add(new JMenuItem("종료")).addActionListener(listener1);
		JMenu moMenu = new JMenu("형태");
		mb.add(moMenu);
		JMenuItem[] menuItem2 = new JMenuItem[4];
		MenuActionListener listener2 = new MenuActionListener(this);
		moMenu.add(new JMenuItem("왼쪽으로 90° 회전")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("180° 회전")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("오른쪽으로 90° 회전")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("세로 대칭")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("가로 대칭")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("50% 작게")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("50% 크게")).addActionListener(listener2);
		moMenu.addSeparator();
		moMenu.add(new JMenuItem("배경 제거")).addActionListener(listener2);
		MenuActionListener listener = new MenuActionListener(this);

		for (int i = 0; i < menuItem.length; ++i) {
			menuItem[i] = new JMenuItem(itemTitle[i]);
			menuItem[i].addActionListener(listener);
			colorMenu.add(menuItem[i]);
		}

		mb.add(colorMenu);
		this.this$0.setJMenuBar(mb);
	}
}